{"version":3,"sources":["components/tableItem/TableItem.js","components/pagination/Pagination.js","components/table/Table.js","components/profileInfo/ProfileInfo.js","hooks/useGridData.js","hooks/useUsersList.js","components/select/Select.js","components/searchInput/SearchInput.js","pages/usersTable/UsersTable.js","hooks/usePagination.js","App.js","index.js"],"names":["TableItem","props","id","firstName","lastName","email","phone","state","item","setSelectedProfile","selectedProfile","onClick","className","Pagination","isPrevVisible","isNextVisible","nextPage","prevPage","disabled","Table","categoryTitles","users","selectedCategoryIndex","selectStateCategory","setSelectCategoryIndex","activeSymbol","pagination","usersList","slice","skip","limit","cellSpacing","map","index","adress","ProfileInfo","description","streetAddress","city","zip","categoriesFiltersConfig","name","filter","values","sort","x","y","sortByField","reverse","sortByState","useGridData","useState","selectedState","setSelectedState","stateCategory","setStateCategory","valueSearchInput","setValueSearchInput","appState","setAppState","useEffect","axios","get","then","resp","allUsers","data","useUsersList","filteredUsers","actualUsers","allStates","Set","i","length","add","searchByState","field","array","seachValue","toString","toUpperCase","includes","Select","allStatesArray","Array","from","unshift","value","onChange","e","reset","target","textInput","React","createRef","SearchInput","ref","type","current","placeholder","UsersTable","itemsAmount","currentPage","setCurrentPage","maxPages","Math","floor","usePagination","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f5d692b1.chunk.js","sourcesContent":["import './style.css';\r\n\r\nexport default function TableItem(props) {\r\n  const {\r\n    id,\r\n    firstName,\r\n    lastName,\r\n    email,\r\n    phone,\r\n    state,\r\n    item,\r\n    setSelectedProfile,\r\n    selectedProfile,\r\n  } = props;\r\n  return (\r\n    <tr\r\n      onClick={() => {\r\n        setSelectedProfile(item);\r\n      }}\r\n      className={item === selectedProfile ? 'tableItemRowActive' : {}}>\r\n      <th className=\"tableItemContainer\">{id}</th>\r\n      <th className=\"tableItemContainer\">{firstName}</th>\r\n      <th className=\"tableItemContainer\">{lastName}</th>\r\n      <th className=\"tableItemContainer\">{email}</th>\r\n      <th className=\"tableItemContainer\">{phone}</th>\r\n      <th className=\"tableItemContainer\">{state}</th>\r\n    </tr>\r\n  );\r\n}\r\n","import './style.css';\r\n\r\nexport default function Pagination(props) {\r\n  const { isPrevVisible, isNextVisible, nextPage, prevPage } = props;\r\n\r\n  return (\r\n    <div className=\"paginationContainer\">\r\n      <button\r\n        className=\"paginationButton button_add\"\r\n        disabled={!isPrevVisible}\r\n        onClick={() => prevPage()}>\r\n        Prev\r\n      </button>\r\n      <button\r\n        className=\"paginationButton button_add\"\r\n        disabled={!isNextVisible}\r\n        onClick={() => nextPage()}>\r\n        Next\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import './style.css';\r\nimport TableItem from '../tableItem/TableItem';\r\nimport Pagination from '../../components/pagination/Pagination';\r\n\r\nexport default function Table(props) {\r\n  const {\r\n    categoryTitles,\r\n    users,\r\n    selectedCategoryIndex,\r\n    selectStateCategory,\r\n    setSelectCategoryIndex,\r\n    activeSymbol,\r\n    setSelectedProfile,\r\n    selectedProfile,\r\n    pagination,\r\n  } = props;\r\n\r\n  const usersList = users.slice(pagination.skip, pagination.limit);\r\n\r\n  return (\r\n    <>\r\n      <table className=\"tableMainContainer\" cellSpacing=\"0\">\r\n        <thead className=\"tableContainerHead\">\r\n          <tr>\r\n            {categoryTitles.map((item, index) => (\r\n              <th\r\n                onClick={() => {\r\n                  setSelectCategoryIndex(index);\r\n                  selectStateCategory();\r\n                }}\r\n                className={selectedCategoryIndex === index ? 'tableThItemActive' : 'tableThItem'}\r\n                key={item + index}>\r\n                {selectedCategoryIndex === index ? item + activeSymbol() : item}\r\n              </th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody className=\"tableContainer\">\r\n          {usersList.map((item, index) => (\r\n            <TableItem\r\n              key={item.phone + index}\r\n              setSelectedProfile={setSelectedProfile}\r\n              selectedProfile={selectedProfile}\r\n              item={item}\r\n              id={item.id}\r\n              firstName={item.firstName}\r\n              lastName={item.lastName}\r\n              email={item.email}\r\n              phone={item.phone}\r\n              state={item.adress.state}\r\n            />\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <Pagination {...pagination} />\r\n    </>\r\n  );\r\n}\r\n","import './style.css';\r\n\r\nexport default function ProfileInfo(props) {\r\n  const { selectedProfile } = props;\r\n  return (\r\n    <div className={'profileInfoContainer'}>\r\n      <div className=\"profileInfoTitle\">Profile Info:</div>\r\n      <div className=\"profileInfoDescriptionDiv\">\r\n        <span className=\"profileInfoDescription\">Selected Profile: </span>\r\n        <span className=\"profileInfoDescriptionSpan\">\r\n          {selectedProfile.firstName} {selectedProfile.lastName}\r\n        </span>\r\n      </div>\r\n      <div className=\"profileInfoDescriptionDiv\">\r\n        <span className=\"profileInfoDescription\">Description: </span>\r\n        <span className=\"profileInfoDescriptionSpan\">{selectedProfile.description}</span>\r\n      </div>\r\n      <div className=\"profileInfoDescriptionDiv\">\r\n        <span className=\"profileInfoDescription\">Address: </span>\r\n        <span className=\"profileInfoDescriptionSpan\">{selectedProfile.adress.streetAddress}</span>\r\n      </div>\r\n      <div className=\"profileInfoDescriptionDiv\">\r\n        <span className=\"profileInfoDescription\">City: </span>\r\n        <span className=\"profileInfoDescriptionSpan\">{selectedProfile.adress.city}</span>\r\n      </div>\r\n      <div className=\"profileInfoDescriptionDiv\">\r\n        <span className=\"profileInfoDescription\">State: </span>\r\n        <span className=\"profileInfoDescriptionSpan\">{selectedProfile.adress.state}</span>\r\n      </div>\r\n      <div className=\"profileInfoDescriptionDiv\">\r\n        <span className=\"profileInfoDescription\">Index: </span>\r\n        <span className=\"profileInfoDescriptionSpan\">{selectedProfile.adress.zip}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import useUsersList from './useUsersList';\r\nimport { useState } from 'react';\r\n\r\nconst categoriesFiltersConfig = [\r\n  {\r\n    name: 'Id',\r\n    filter: (values, state) => {\r\n      if (state === true) {\r\n        return values.sort((x, y) => sortByField(x, y, 'id'));\r\n      } else {\r\n        return values.sort((x, y) => sortByField(x, y, 'id')).reverse();\r\n      }\r\n    },\r\n  },\r\n  {\r\n    name: 'First name',\r\n    filter: (values, state) => {\r\n      if (state === true) {\r\n        return values.sort((x, y) => sortByField(x, y, 'firstName'));\r\n      } else {\r\n        return values.sort((x, y) => sortByField(x, y, 'firstName')).reverse();\r\n      }\r\n    },\r\n  },\r\n  {\r\n    name: 'Last name',\r\n    filter: (values, state) => {\r\n      if (state === true) {\r\n        return values.sort((x, y) => sortByField(x, y, 'lastName'));\r\n      } else {\r\n        return values.sort((x, y) => sortByField(x, y, 'lastName')).reverse();\r\n      }\r\n    },\r\n  },\r\n  {\r\n    name: 'Email',\r\n    filter: (values, state) => {\r\n      if (state === true) {\r\n        return values.sort((x, y) => sortByField(x, y, 'email'));\r\n      } else {\r\n        return values.sort((x, y) => sortByField(x, y, 'email')).reverse();\r\n      }\r\n    },\r\n  },\r\n  {\r\n    name: 'Phone',\r\n    filter: (values, state) => {\r\n      if (state === true) {\r\n        return values.sort((x, y) => sortByField(x, y, 'phone'));\r\n      } else {\r\n        return values.sort((x, y) => sortByField(x, y, 'phone')).reverse();\r\n      }\r\n    },\r\n  },\r\n  {\r\n    name: 'State',\r\n    filter: (values, state) => {\r\n      if (state === true) {\r\n        return values.sort(sortByState);\r\n      } else {\r\n        return values.sort(sortByState).reverse();\r\n      }\r\n    },\r\n  },\r\n];\r\n\r\nconst categoryTitles = categoriesFiltersConfig.map((x) => x.name);\r\n\r\nexport default function useGridData() {\r\n  const [selectedCategoryIndex, setSelectCategoryIndex] = useState(3);\r\n  const [selectedState, setSelectedState] = useState('All state');\r\n  const [stateCategory, setStateCategory] = useState(true);\r\n  const [valueSearchInput, setValueSearchInput] = useState('');\r\n  const [selectedProfile, setSelectedProfile] = useState({\r\n    id: '',\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    phone: '',\r\n    adress: {\r\n      streetAddress: '',\r\n      city: '',\r\n      state: '',\r\n      zip: '',\r\n    },\r\n    description: '',\r\n  });\r\n  //\r\n  const usersList = useUsersList();\r\n  //\r\n  let filteredUsers = actualUsers(usersList, valueSearchInput);\r\n  const allStates = new Set();\r\n  for (let i = 0; i < filteredUsers.length; i++) {\r\n    allStates.add(filteredUsers[i].adress.state);\r\n  }\r\n  filteredUsers = searchByState(filteredUsers, selectedState);\r\n  const config = categoriesFiltersConfig[selectedCategoryIndex];\r\n  const users = config.filter(filteredUsers, stateCategory);\r\n\r\n  const selectStateCategory = () => {\r\n    if (stateCategory === true) {\r\n      return setStateCategory(false);\r\n    } else {\r\n      return setStateCategory(true);\r\n    }\r\n  };\r\n\r\n  const activeSymbol = () => {\r\n    return stateCategory ? ' ▲' : ' ▼';\r\n  };\r\n\r\n  return {\r\n    stateCategory,\r\n    categoryTitles,\r\n    users,\r\n    selectedCategoryIndex,\r\n    selectedProfile,\r\n    allStates,\r\n    selectedState,\r\n    activeSymbol,\r\n    setSelectCategoryIndex,\r\n    selectStateCategory,\r\n    setSelectedProfile,\r\n    setValueSearchInput,\r\n    setSelectedState,\r\n  };\r\n}\r\n\r\nfunction sortByState(x, y) {\r\n  if (x.adress.state < y.adress.state) {\r\n    return -1;\r\n  }\r\n  if (x.adress.state > y.adress.state) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction sortByField(x, y, field) {\r\n  if (typeof x[field] === 'string') {\r\n    if (x[field] < y[field]) {\r\n      return -1;\r\n    }\r\n    if (x[field] > y[field]) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  }\r\n  return x[field] - y[field];\r\n}\r\n\r\nconst actualUsers = (array, seachValue) => {\r\n  if (seachValue.length < 2) {\r\n    return array;\r\n  } else {\r\n    return array.filter(\r\n      (x) =>\r\n        x.id.toString().toUpperCase().includes(seachValue.toUpperCase()) ||\r\n        x.firstName.toString().toUpperCase().includes(seachValue.toUpperCase()) ||\r\n        x.lastName.toString().toUpperCase().includes(seachValue.toUpperCase()) ||\r\n        x.email.toString().toUpperCase().includes(seachValue.toUpperCase()) ||\r\n        x.phone.toString().toUpperCase().includes(seachValue.toUpperCase()) ||\r\n        x.adress.state.toString().toUpperCase().includes(seachValue.toUpperCase()),\r\n    );\r\n  }\r\n};\r\n\r\nconst searchByState = (array, seachValue) => {\r\n  if (seachValue === 'All state') {\r\n    return array;\r\n  } else {\r\n    return array.filter((x) => x.adress.state.toString().includes(seachValue));\r\n  }\r\n};\r\n","import axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\n\r\nexport default function useUsersList() {\r\n  const [appState, setAppState] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const apiUrl =\r\n      'https://itrex-react-lab-files.s3.eu-central-1.amazonaws.com/react-test-api.json';\r\n    axios.get(apiUrl).then((resp) => {\r\n      const allUsers = resp.data;\r\n      setAppState(allUsers);\r\n    });\r\n  }, [setAppState]);\r\n  return appState;\r\n}\r\n","import './style.css';\r\nimport React from 'react';\r\n\r\nexport default function Select(props) {\r\n  const { allStates, selectedState, setSelectedState, pagination } = props;\r\n  const allStatesArray = Array.from(allStates);\r\n  allStatesArray.unshift('All state');\r\n\r\n  const handleChange = (e) => {\r\n    pagination.reset();\r\n    setSelectedState(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"selectComponentContainer\">\r\n      <select className=\"select-css\" value={selectedState} onChange={handleChange}>\r\n        {allStatesArray.map((item, index) => (\r\n          <option value={item} key={item + index}>\r\n            {item}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n","import './style.css';\r\nimport React from 'react';\r\nimport Select from '../select/Select';\r\n\r\nconst textInput = React.createRef();\r\n\r\nexport default function SearchInput(props) {\r\n  const { setValueSearchInput, allStates, setSelectedState, selectedState, pagination } = props;\r\n\r\n  return (\r\n    <div className=\"dataInputContainer\">\r\n      <span className=\"titleOfSearchInput\">Search</span>\r\n      <div className=\"boxForInput\">\r\n        <input\r\n          ref={textInput}\r\n          type=\"text\"\r\n          onChange={() => {\r\n            setValueSearchInput(textInput.current.value);\r\n            pagination.reset();\r\n          }}\r\n          className=\"entryField\"\r\n          placeholder=\" Search...\"\r\n        />\r\n        <Select\r\n          allStates={allStates}\r\n          setSelectedState={setSelectedState}\r\n          selectedState={selectedState}\r\n          pagination={pagination}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import './style.css';\r\nimport Table from '../../components/table/Table';\r\nimport ProfileInfo from '../../components/profileInfo/ProfileInfo';\r\nimport useGridData from '../../hooks/useGridData';\r\nimport SearchInput from '../../components/searchInput/SearchInput';\r\nimport usePagination from '../../hooks/usePagination';\r\n\r\nexport default function UsersTable() {\r\n  const {\r\n    categoryTitles,\r\n    users,\r\n    selectedCategoryIndex,\r\n    selectedProfile,\r\n    allStates,\r\n    selectedState,\r\n    selectStateCategory,\r\n    setSelectCategoryIndex,\r\n    activeSymbol,\r\n    setSelectedProfile,\r\n    setValueSearchInput,\r\n    setSelectedState,\r\n  } = useGridData();\r\n  const pagination = usePagination(users.length);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"header\">\r\n        <SearchInput\r\n          pagination={pagination}\r\n          allStates={allStates}\r\n          setSelectedState={setSelectedState}\r\n          selectedState={selectedState}\r\n          setValueSearchInput={setValueSearchInput}\r\n        />\r\n      </div>\r\n      <Table\r\n        pagination={pagination}\r\n        categoryTitles={categoryTitles}\r\n        users={users}\r\n        selectedCategoryIndex={selectedCategoryIndex}\r\n        selectStateCategory={selectStateCategory}\r\n        setSelectCategoryIndex={setSelectCategoryIndex}\r\n        activeSymbol={activeSymbol}\r\n        setSelectedProfile={setSelectedProfile}\r\n        selectedProfile={selectedProfile}\r\n      />\r\n      <ProfileInfo selectedProfile={selectedProfile} />\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\n\r\nconst ITEMS_PER_PAGE = 20;\r\n\r\nexport default function usePagination(itemsAmount) {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  const maxPages = Math.floor(itemsAmount / ITEMS_PER_PAGE);\r\n  const isNextVisible = currentPage < maxPages;\r\n  const isPrevVisible = currentPage > 1;\r\n  const skip = (currentPage - 1) * ITEMS_PER_PAGE;\r\n  const limit = currentPage * ITEMS_PER_PAGE;\r\n\r\n  const nextPage = () => {\r\n    if (currentPage === maxPages) {\r\n      return;\r\n    }\r\n\r\n    setCurrentPage(currentPage + 1);\r\n  };\r\n\r\n  const prevPage = () => {\r\n    if (currentPage === 1) {\r\n      return;\r\n    }\r\n\r\n    setCurrentPage(currentPage - 1);\r\n  };\r\n\r\n  const reset = () => {\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  return {\r\n    isNextVisible,\r\n    isPrevVisible,\r\n    nextPage,\r\n    prevPage,\r\n    reset,\r\n    skip,\r\n    limit,\r\n  };\r\n}\r\n","import UsersTable from './pages/usersTable/UsersTable';\nimport './App.css';\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <UsersTable />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}